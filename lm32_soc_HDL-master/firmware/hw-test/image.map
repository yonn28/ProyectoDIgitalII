
Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0xa1c
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208      0x230 main.o
                0x0000000000000208                main
 .text          0x0000000000000438      0x5e4 soc-hw.o
                0x0000000000000438                isr_null
                0x000000000000043c                irq_handler
                0x00000000000004b0                isr_init
                0x00000000000004d4                isr_register
                0x00000000000004ec                isr_unregister
                0x000000000000050c                msleep
                0x0000000000000548                nsleep
                0x0000000000000578                tic_isr
                0x00000000000005a4                tic_init
                0x00000000000005d4                uart_init
                0x00000000000005d8                uart_getchar
                0x00000000000005fc                uart_putchar
                0x0000000000000620                uart_putstr
                0x0000000000000654                gpio_get_in1
                0x000000000000066c                gpio_get_in2
                0x0000000000000684                gpio_set_out1
                0x000000000000069c                gpio_set_out2
                0x00000000000006b4                gpio_set_dir1
                0x00000000000006cc                gpio_set_dir2
                0x00000000000006e4                spi_Writte
                0x0000000000000710                spi_read
                0x000000000000073c                SPI_begin
                0x0000000000000754                spi_setDiv
                0x000000000000076c                I2CstartCond
                0x0000000000000790                I2CStopCond
                0x00000000000007b4                I2CWriteBytePointer
                0x00000000000007e0                I2CWriteByte
                0x000000000000082c                I2CReadByte
                0x0000000000000870                SetDisplay
                0x0000000000000938                SetDpDisplay
                0x0000000000000a1c                _etext = .

.rodata         0x0000000000000a1c       0x50
                0x0000000000000a1c                . = ALIGN (0x4)
                0x0000000000000a1c                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.cst4   0x0000000000000a1c        0x8 soc-hw.o
 .rodata        0x0000000000000a24       0x48 soc-hw.o
 *(.rodata1)
                0x0000000000000a6c                _erodata = .

.data           0x0000000000000a6c       0x18
                0x0000000000000a6c                . = ALIGN (0x4)
                0x0000000000000a6c                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000a6c        0x0 crt0ram.o
 .data          0x0000000000000a6c        0x0 main.o
 .data          0x0000000000000a6c       0x18 soc-hw.o
                0x0000000000000a6c                uart0
                0x0000000000000a70                timer0
                0x0000000000000a74                gpio0
                0x0000000000000a78                spi0
                0x0000000000000a7c                i2c0
                0x0000000000000a80                Display0
 *(.data1)
                0x0000000000000a90                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000000a84                _edata = .

.bss            0x0000000000000a84       0x84
                0x0000000000000a84                . = ALIGN (0x4)
                0x0000000000000a84                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000a84        0x0 crt0ram.o
 .bss           0x0000000000000a84        0x0 main.o
 .bss           0x0000000000000a84        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x0000000000000a84       0x84 soc-hw.o
                0x0000000000000a84                isr_table
                0x0000000000000b04                tic_msec
                0x0000000000000b08                _ebss = .
                0x0000000000000b08                _end = .
                0x0000000000000ffc                PROVIDE (_fstack, ((ORIGIN (ram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x277
 .debug_abbrev  0x0000000000000000       0x75 main.o
 .debug_abbrev  0x0000000000000075      0x202 soc-hw.o

.debug_info     0x0000000000000000      0x9ac
 .debug_info    0x0000000000000000       0xee main.o
 .debug_info    0x00000000000000ee      0x8be soc-hw.o

.debug_line     0x0000000000000000      0x90a
 .debug_line    0x0000000000000000      0x28f main.o
 .debug_line    0x000000000000028f      0x67b soc-hw.o

.debug_frame    0x0000000000000000      0x210
 .debug_frame   0x0000000000000000       0x20 main.o
 .debug_frame   0x0000000000000020      0x1f0 soc-hw.o

.debug_loc      0x0000000000000000      0x2ba
 .debug_loc     0x0000000000000000      0x106 main.o
 .debug_loc     0x0000000000000106      0x1b4 soc-hw.o

.debug_pubnames
                0x0000000000000000      0x260
 .debug_pubnames
                0x0000000000000000       0x1b main.o
 .debug_pubnames
                0x000000000000001b      0x245 soc-hw.o

.debug_pubtypes
                0x0000000000000000       0x90
 .debug_pubtypes
                0x0000000000000000       0x1f main.o
 .debug_pubtypes
                0x000000000000001f       0x71 soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x37f
 .debug_str     0x0000000000000000       0x94 main.o
                                         0xa5 (size before relaxing)
 .debug_str     0x0000000000000094      0x2eb soc-hw.o
                                        0x3b6 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o


Allocating common symbols
Common symbol       size              file

isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0x5b0
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208       0xa0 main.o
                0x0000000000000208                main
 .text          0x00000000000002a8      0x308 soc-hw.o
                0x00000000000002a8                isr_null
                0x00000000000002ac                tic_isr
                0x00000000000002d8                irq_handler
                0x000000000000033c                isr_init
                0x0000000000000360                isr_register
                0x0000000000000378                isr_unregister
                0x0000000000000398                msleep
                0x00000000000003d4                nsleep
                0x0000000000000404                tic_init
                0x0000000000000448                uart_init
                0x000000000000044c                uart_getchar
                0x0000000000000470                uart_putchar
                0x0000000000000494                uart_putstr
                0x00000000000004c8                gpio_get_in
                0x00000000000004e0                gpio_get_dir
                0x00000000000004f8                gpio_set_out
                0x0000000000000510                gpio_set_dir
                0x0000000000000528                spi_Writte
                0x0000000000000554                spi_read
                0x0000000000000580                SPI_begin
                0x0000000000000598                spi_setDiv
                0x00000000000005b0                _etext = .

.rodata         0x00000000000005b0       0x20
                0x00000000000005b0                . = ALIGN (0x4)
                0x00000000000005b0                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x00000000000005b0       0x1c main.o
                                         0x20 (size before relaxing)
 .rodata.cst4   0x00000000000005cc        0x4 soc-hw.o
 *(.rodata1)
                0x00000000000005d0                _erodata = .

.data           0x00000000000005d0       0x14
                0x00000000000005d0                . = ALIGN (0x4)
                0x00000000000005d0                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000000005d0        0x0 crt0ram.o
 .data          0x00000000000005d0        0x0 main.o
 .data          0x00000000000005d0       0x14 soc-hw.o
                0x00000000000005d0                uart0
                0x00000000000005d4                timer0
                0x00000000000005d8                gpio0
                0x00000000000005dc                spi0
                0x00000000000005e0                i2c0
 *(.data1)
                0x00000000000005f0                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x00000000000005e4                _edata = .

.bss            0x00000000000005e4       0x84
                0x00000000000005e4                . = ALIGN (0x4)
                0x00000000000005e4                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000000005e4        0x0 crt0ram.o
 .bss           0x00000000000005e4        0x0 main.o
 .bss           0x00000000000005e4        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x00000000000005e4       0x84 soc-hw.o
                0x00000000000005e4                isr_table
                0x0000000000000664                tic_msec
                0x0000000000000668                _ebss = .
                0x0000000000000668                _end = .
                0x0000000000000ffc                PROVIDE (_fstack, ((ORIGIN (ram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x22d
 .debug_abbrev  0x0000000000000000       0x59 main.o
 .debug_abbrev  0x0000000000000059      0x1d4 soc-hw.o

.debug_info     0x0000000000000000      0x6d4
 .debug_info    0x0000000000000000       0x89 main.o
 .debug_info    0x0000000000000089      0x64b soc-hw.o

.debug_line     0x0000000000000000      0x451
 .debug_line    0x0000000000000000       0x86 main.o
 .debug_line    0x0000000000000086      0x3cb soc-hw.o

.debug_frame    0x0000000000000000      0x180
 .debug_frame   0x0000000000000000       0x20 main.o
 .debug_frame   0x0000000000000020      0x160 soc-hw.o

.debug_loc      0x0000000000000000      0x1a7
 .debug_loc     0x0000000000000000       0x3c main.o
 .debug_loc     0x000000000000003c      0x16b soc-hw.o

.debug_pubnames
                0x0000000000000000      0x1b2
 .debug_pubnames
                0x0000000000000000       0x1b main.o
 .debug_pubnames
                0x000000000000001b      0x197 soc-hw.o

.debug_pubtypes
                0x0000000000000000       0x75
 .debug_pubtypes
                0x0000000000000000       0x12 main.o
 .debug_pubtypes
                0x0000000000000012       0x63 soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x268
 .debug_str     0x0000000000000000       0x74 main.o
                                         0x85 (size before relaxing)
 .debug_str     0x0000000000000074      0x1f4 soc-hw.o
                                        0x278 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 soc-hw.o
